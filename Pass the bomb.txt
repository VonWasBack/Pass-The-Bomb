local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local Config = {
    Player = Players.LocalPlayer,
    BombName = "Bomb",
    ESPLineThickness = 2,
    ESPTextSize = 20,
    DiscordLink = "https://discord.com/invite/bRMmg4q9f7",
    PassDelay = 0.1,
    TeleportAfterPass = false,
    ESPColor = Color3.new(0, 1, 0), -- Default Green ESP
    CoinName = "Coin",
    OriginalPosition = nil
}

-- Utility Functions
local function isHoldingBomb(player)
    return player.Character and player.Character:FindFirstChild(Config.BombName) ~= nil
end

local function getRandomPlayer()
    local players = Players:GetPlayers()
    local filteredPlayers = {}
    for _, p in ipairs(players) do
        if p ~= Config.Player and not isHoldingBomb(p) then
            table.insert(filteredPlayers, p)
        end
    end
    return #filteredPlayers > 0 and filteredPlayers[math.random(1, #filteredPlayers)] or nil
end

-- Improved Teleportation Functions
local function teleportTo(destination)
    local character = Config.Player.Character
    if character and character:FindFirstChild("HumanoidRootPart") and destination then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.PlatformStand = true
        end
        
        character.HumanoidRootPart.CFrame = destination
        
        task.wait(0.1) -- Short delay to ensure the teleport has completed
        
        if humanoid then
            humanoid.PlatformStand = false
        end
    end
end

local function teleportToRandomPlayer()
    local randomPlayer = getRandomPlayer()
    if randomPlayer and randomPlayer.Character then
        local targetRoot = randomPlayer.Character:FindFirstChild("HumanoidRootPart")
        if targetRoot then
            local offset = Vector3.new(0, 0, 2) -- Teleport behind the player
            local targetCFrame = targetRoot.CFrame * CFrame.new(offset)
            teleportTo(targetCFrame)
        end
    end
end

local function returnToOriginalPosition()
    if Config.OriginalPosition then
        teleportTo(Config.OriginalPosition)
        Config.OriginalPosition = nil
    end
end

-- Auto Win Functionality
local AutoWin = {
    Enabled = false,
    Connection = nil
}

function AutoWin:Toggle(value)
    self.Enabled = value
    if self.Enabled then
        self.Connection = RunService.Heartbeat:Connect(function()
            if isHoldingBomb(Config.Player) then
                if not Config.OriginalPosition then
                    Config.OriginalPosition = Config.Player.Character.HumanoidRootPart.CFrame
                end
                teleportToRandomPlayer()
                task.wait(Config.PassDelay)
                if not Config.TeleportAfterPass then
                    returnToOriginalPosition()
                end
            end
        end)
    elseif self.Connection then
        self.Connection:Disconnect()
        self.Connection = nil
        returnToOriginalPosition()
    end
end

-- ESP Functionality
local ESP = {
    Enabled = false,
    Players = {}
}

function ESP:CreateForPlayer(player)
    local espData = {
        Line = Drawing.new("Line"),
        NameTag = Drawing.new("Text"),
        DistanceTag = Drawing.new("Text")
    }

    espData.Line.Thickness = Config.ESPLineThickness
    espData.Line.Transparency = 1

    for _, text in pairs({espData.NameTag, espData.DistanceTag}) do
        text.Size = Config.ESPTextSize
        text.Center = true
        text.Outline = true
    end

    self.Players[player] = espData

    RunService.RenderStepped:Connect(function()
        self:UpdateESP(player, espData)
    end)
end

function ESP:UpdateESP(player, espData)
    if not self.Enabled or not player or not player.Character then
        for _, item in pairs(espData) do
            item.Visible = false
        end
        return
    end

    local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end

    local screenPos, onScreen = Workspace.CurrentCamera:WorldToViewportPoint(rootPart.Position)
    local color = Config.ESPColor

    if onScreen then
        espData.Line.From = Vector2.new(Workspace.CurrentCamera.ViewportSize.X / 2, Workspace.CurrentCamera.ViewportSize.Y / 2)
        espData.Line.To = Vector2.new(screenPos.X, screenPos.Y)
        espData.Line.Color = color

        espData.NameTag.Text = player.Name
        espData.NameTag.Position = Vector2.new(screenPos.X, screenPos.Y - 20)
        espData.NameTag.Color = color

        local distance = (rootPart.Position - Workspace.CurrentCamera.CFrame.Position).Magnitude
        espData.DistanceTag.Text = string.format("%.2f studs", distance)
        espData.DistanceTag.Position = Vector2.new(screenPos.X, screenPos.Y + 20)
        espData.DistanceTag.Color = color

        for _, item in pairs(espData) do
            item.Visible = true
        end
    else
        for _, item in pairs(espData) do
            item.Visible = false
        end
    end
end

function ESP:Toggle(value)
    self.Enabled = value
    if not self.Enabled then
        for _, espData in pairs(self.Players) do
            for _, item in pairs(espData) do
                item.Visible = false
            end
        end
    end
end

-- Initialize ESP for existing players
for _, player in ipairs(Players:GetPlayers()) do
    ESP:CreateForPlayer(player)
end

-- Add ESP for new players
Players.PlayerAdded:Connect(function(player)
    ESP:CreateForPlayer(player)
end)

-- Auto Collect Coins Functionality
local AutoCollectCoins = {
    Enabled = false,
    Connection = nil
}

function AutoCollectCoins:Toggle(value)
    self.Enabled = value
    if self.Enabled then
        self.Connection = RunService.Heartbeat:Connect(function()
            for _, coin in ipairs(Workspace:GetChildren()) do
                if coin.Name == Config.CoinName and coin:IsA("BasePart") then
                    coin.CFrame = Config.Player.Character.HumanoidRootPart.CFrame
                end
            end
        end)
    elseif self.Connection then
        self.Connection:Disconnect()
        self.Connection = nil
    end
end

-- UI Creation
local Window = OrionLib:MakeWindow({Name = "Von Pass The Bomb", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionPassTheBomb"})

local MainTab = Window:MakeTab({
    Name = "Main Features",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

MainTab:AddToggle({
    Name = "Auto Win",
    Default = false,
    Callback = function(Value)
        AutoWin:Toggle(Value)
        OrionLib:MakeNotification({
            Name = "Auto Win",
            Content = Value and "Enabled" or "Disabled",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

MainTab:AddToggle({
    Name = "ESP",
    Default = false,
    Callback = function(Value)
        ESP:Toggle(Value)
        OrionLib:MakeNotification({
            Name = "ESP",
            Content = Value and "Enabled" or "Disabled",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

MainTab:AddDropdown({
    Name = "ESP Color",
    Default = "Green",
    Options = {"Green", "Red"},
    Callback = function(Value)
        Config.ESPColor = Value == "Green" and Color3.new(0, 1, 0) or Color3.new(1, 0, 0)
        OrionLib:MakeNotification({
            Name = "ESP Color",
            Content = "Set to " .. Value,
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

MainTab:AddToggle({
    Name = "Teleport After Pass",
    Default = false,
    Callback = function(Value)
        Config.TeleportAfterPass = Value
        OrionLib:MakeNotification({
            Name = "Teleport After Pass",
            Content = Value and "Enabled" or "Disabled",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

MainTab:AddSlider({
    Name = "Pass Delay",
    Min = 0,
    Max = 1,
    Default = 0.1,
    Color = Color3.fromRGB(255,255,255),
    Increment = 0.01,
    ValueName = "seconds",
    Callback = function(Value)
        Config.PassDelay = Value
        OrionLib:MakeNotification({
            Name = "Pass Delay",
            Content = "Set to " .. string.format("%.2f", Value) .. " seconds",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end    
})

MainTab:AddToggle({
    Name = "Auto Collect Coins",
    Default = false,
    Callback = function(Value)
        AutoCollectCoins:Toggle(Value)
        OrionLib:MakeNotification({
            Name = "Auto Collect Coins",
            Content = Value and "Enabled" or "Disabled",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

local InfoTab = Window:MakeTab({
    Name = "Information",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

InfoTab:AddParagraph("Credits", "Original by Jam, Enhanced by Von")
InfoTab:AddParagraph("Update Logs", "Version 2.6: Fixed AutoWin functionality, improved teleportation stability")

InfoTab:AddButton({
    Name = "Copy Discord Invite",
    Callback = function()
        setclipboard(Config.DiscordLink)
        OrionLib:MakeNotification({
            Name = "Discord Link Copied",
            Content = "The invite link has been copied to your clipboard.",
            Image = "rbxassetid://4483345998",
            Time = 5
        })
    end
})

OrionLib:Init()
